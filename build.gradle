buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
//        maven {
//            name = 'sponge'
//            url = 'http://repo.spongepowered.org/maven'
//        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
//        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
//apply plugin: 'org.spongepowered.mixin'

version = '1.12.2-63.0'
group = 'com.github.aechtrob.prehistoricflora' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'lepidodendron'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

//mixin {
//    add sourceSets.main, "lepidodendron.refmap.json"
//    config "lepidodendron.mixins.json"
//
//    debug.verbose = true
//    debug.export = true
//}

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    //mappings channel: 'snapshot', version: '20171003-1.12'
    mappings channel: 'snapshot', version: '20180814-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'
    implementation ("net.minecraftforge:mergetool:0.2.3.3") { force = true }
    //compile('org.spongepowered:mixin:0.7-SNAPSHOT')

    //compile files('libs/pncambrian-1.12.2-1.0.jar')
    //compile files('libs/pnsilurian-1.12.2-1.0.jar')
    //compile files('libs/pncambrian-1.12.2-1.0.jar')
    //compile files('libs/pncambrian-1.12.2-1.0.jar')
    //compile files('libs/pncambrian-1.12.2-1.0.jar')
    //compile files('libs/pncambrian-1.12.2-1.0.jar')
    //compile files('libs/pncambrian-1.12.2-1.0.jar')
    //compile files('libs/pncambrian-1.12.2-1.0.jar')
    //compile files('libs/pncambrian-1.12.2-1.0.jar')
    compile files('libs/llibrary-1.7.20-1.12.2.jar')
    compile files('libs/prehistoricnaturedeco-1.12.2-1.0.jar')
    compileOnly files('libs/BiomesOPlenty-1.12.2-7.0.1.2445-universal.jar')
    compile "vazkii.patchouli:Patchouli:1.0-21.4"

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    zip64=true
    manifest {
        attributes([
                "Specification-Title": "examplemod",
                "Specification-Vendor": "examplemodsareus",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"examplemodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    zip64=true
    classifier = 'sources'
    from sourceSets.main.allSource
}
build.dependsOn sourcesJar

artifacts {
    archives sourcesJar
}

// Process resources on build
processResources {
    // This will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version

    // Replace stuff in mods.toml, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        // Replace version
        expand 'version':project.version
    }

    // Copy everything else except the mods.toml
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }

}

sourceSets {
    main { output.resourcesDir = output.classesDir }
}

repositories {
    maven { url 'https://maven.blamejared.com' }
//    maven {
//        name = 'sponge'
//        url = 'http://repo.spongepowered.org/maven'
//    }
}

